# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :"lesson02-raid" => {
        :box_name => "generic/centos8",
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
		},
                :sata3 => {
                        :dfile => './sata3.vdi',
                        :size => 250,
                        :port => 3
                },
                :sata4 => {
                        :dfile => './sata4.vdi',
                        :size => 250, # Megabytes
                        :port => 4
                 },
                 :sata5 => {
                         :dfile => './sata5.vdi',
                         :size => 250, # Megabytes
                         :port => 5
                },
                :sata6 => {
                        :dfile => './sata6.vdi',
                        :size => 250, # Megabytes
                        :port => 6
                }

	}


  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.provider :virtualbox do |vb|
                  vb.customize ["modifyvm", :id, "--memory", "1024"]
                               
                  unless File.exist?("./sata1.vdi")
                       vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                  end

		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                          end
		  end
          end

          box.vm.provision "shell", inline: <<-SHELL
              if [[ ! -a ~root/.ssh/authorized_keys ]]
	      then
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
	      dnf -y install mdadm smartmontools hdparm gdisk nano
              echo " "
              echo "Block devices found:"
              echo "==================================="
              lsblk
              fi
              echo " "
              if [[ -z "$(ls /dev | grep md)" ]]
              then
              echo "Starting mdadm configuration script"
              echo "==================================="
              echo " "
              echo "1. Clear disks and create raid"
              mdadm --quiet --zero-superblock --force /dev/sd{b,c,d,e,f,g}
              mdadm --quiet --create /dev/md0 -l 10 -n 4 /dev/sd{b,c,d,e}
              echo "y" | mdadm --quiet --create --force /dev/md1 -l 1 -n 2 /dev/sd{f,g} > /dev/null 2>&1
              echo "2. Create config file at /etc/mdadm/mdadm.conf"
              mkdir /etc/mdadm
              echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
              mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
              echo "3. Create partitions"
              parted -s /dev/md0 mklabel gpt
              parted -s /dev/md1 mklabel gpt
              parted /dev/md0 mkpart primary ext4 0% 25%  > /dev/null 2>&1
              parted /dev/md0 mkpart primary ext4 25% 50%  > /dev/null 2>&1
              parted /dev/md0 mkpart primary ext4 50% 75%  > /dev/null 2>&1
              parted /dev/md0 mkpart primary ext4 75% 100%  > /dev/null 2>&1
              parted /dev/md1 mkpart primary ext4  0% 100%  > /dev/null 2>&1
              echo "4. Create FS on new partitions"
              for i in $(seq 1 4); do mkfs.ext4 -F -q /dev/md0p$i > /dev/null 2>&1; done
              mkfs.ext4 -F -q /dev/md1p1 > /dev/null 2>&1
              echo "5. Mount new partitions"
              mkdir -p /raid/part{1,2,3,4,5}
              for i in $(seq 1 4); do mount /dev/md0p$i /raid/part$i; done
              mount /dev/md1p1 /raid/part5
              echo "6. Add new partitions to fstab"
              echo "# Automount /dev/md* partitions" >> /etc/fstab
              echo "/dev/md0p1    /raid/part1    ext4    defaults  0 0" >> /etc/fstab
              echo "/dev/md0p2    /raid/part2    ext4    defaults  0 0" >> /etc/fstab
              echo "/dev/md0p3    /raid/part3    ext4    defaults  0 0" >> /etc/fstab
              echo "/dev/md0p4    /raid/part4    ext4    defaults  0 0" >> /etc/fstab
              echo "/dev/md1p1    /raid/part5    ext4    defaults  0 0" >> /etc/fstab
              echo " "
              echo "All tasks are finished!"
              echo " "
              echo "Current mdadm state:"
              echo "==================================="
              mdadm --detail --scan --brief
              else
              echo " "
              echo "Found that mdadm already configured, finishing script"
              echo "Current mdadm state:"
              echo "==================================="
              mdadm --detail --scan --brief
              fi
              echo " "
          SHELL
      end
  end
end

